# Импортируем модуль random для генерации случайных чисел
import random

# Переменные для суммирования баллов по первой и второй волнам конкурса
ball_1 = 0  # Общий балл для первой волны
ball_2 = 0  # Общий балл для второй волны
b_2 = 0     # Количество участников во второй волне
b_1 = 0     # Количество участников в первой волне

# Генерируем случайный результат ваших вступительных испытаний
your_ball = random.randint(60, 100)

# Подсчет среднего балла для первой волны конкурса
for i in range(100):
    ball_1 += random.randint(78, 85)  # Генерация случайного балла и добавление к общей сумме
    b_1 += 1  # Увеличиваем счетчик участников

# Подсчет среднего балла для второй волны конкурса
for i in range(100):
    ball_2 += random.randint(70, 85)  # Генерация случайного балла и добавление к общей сумме
    b_2 += 1  # Увеличиваем счетчик участников

# Рассчитываем средний балл для каждой волны, округляем до целого числа
ball_1 = round(ball_1 / b_1)
ball_2 = round(ball_2 / b_2)

# Если разница баллов между волнами меньше 8, корректируем балл второй волны
if (ball_1 - ball_2 < 8):
    ball_2 -= 8 - (ball_1 - ball_2)

# Начальное состояние конкурса — прием документов
def start(claim):
    print("Прием в ВУЗ открыт!")
    print("Документы поданы")
    print(f"Проходной бал для первой волны: {ball_1}")
    print(f"Проходной бал для второй волны: {ball_2}")
    claim["state"] = 'analyze_voln_one'  # Переход к первой волне анализа

# Анализ результатов первой волны
def analyze_voln_one(claim):
    print("\nКонкурс волна первая")
    print(f"Ваш результат вступительных испытаний: {your_ball}")
    if your_ball > ball_1:
        claim["state"] = "processing"  # Переход к этапу обработки, если балл выше
    else:
        claim["state"] = "analyze_voln_two"  # Иначе проверка во второй волне

# Анализ результатов второй волны
def analyze_voln_two(claim):
    print("\nКонкурс волна вторая")
    print(f"Ваш результат вступительных испытаний: {your_ball}")
    if your_ball > ball_2:
        claim["state"] = "processing"  # Переход к обработке, если балл выше
    else:
        print("Конкурс не пройден")
        claim['state'] = "end_processing"  # Завершение обработки, если балл не проходит

# Этап обработки заявки при успешном прохождении конкурса
def processing(claim):
    print("\nВы прошли конкурс! Поздравляем!")
    print("ВЫ БЫЛИ ВКЛЮЧЕНЫ В ПРИКАЗ О ЗАЧИСЛЕНИИ!!!")
    claim['state'] = 'end_processing'  # Завершение обработки

# Закрытие приема документов
def end_processing(claim):
    print("\nПрием документов в ВУЗ закрыт")
    claim['state'] = None  # Окончательное завершение обработки

# Словарь состояний, сопоставляющий состояние функции
state = {
    'start': start,
    "analyze_voln_one": analyze_voln_one,
    "analyze_voln_two": analyze_voln_two,
    "end_processing": end_processing,
    "processing": processing
}

# Основная функция для запуска процесса подачи документов
def run_entering_dokuments():
    claim = {"state": 'start'}  # Инициализация начального состояния
    while claim['state'] is not None:
        fun = state[claim['state']]  # Выбор функции по текущему состоянию
        fun(claim)  # Выполнение функции состояния

# Запуск процесса подачи документов в ВУЗ
run_entering_dokuments()
